name: Generate and Deploy Documentation PDF

on:
  push:
    branches:
      - main
    paths:
      - "docs/**"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/checkout@v2
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: pandoc texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra nodejs npm chromium

      - name: Install Dependencies
        run: |
          sudo npm install -g @mermaid-js/mermaid-cli puppeteer

      - name: Generate Mermaid Diagram Images
        run: |
          OUTPUT_DIR="docs"
          DIAGRAMS_DIR="docs/diagrams"
          IMAGE_DIR="docs/tmp"
          mkdir -p "$IMAGE_DIR"
          for file in "$DIAGRAMS_DIR"/*.md; do
            basename=$(basename "$file" .md)
            mmdc -i "$file" -o "$IMAGE_DIR/$basename.png"
            mv "$IMAGE_DIR/$basename-1.png" "$IMAGE_DIR/$basename.png" || true
            echo "Renamed file to: $IMAGE_DIR/$basename.png"
          done

      - name: Generate PDF from Markdown
        run: |
          pandoc docs/index.md docs/motivation.md docs/architektur.md docs/komponenten.md docs/databaseDesign.md docs/useCases.md docs/verwendungszweck.md docs/zieluser.md --pdf-engine=pdflatex -o docs/documentation.pdf

      - name: Create or Update GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: docs/documentation.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}